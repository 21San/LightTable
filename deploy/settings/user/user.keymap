{:+ {:app {"cmd-k" [:toggle-console]
           "cmd-t" [:workspace.show]
           "cmd-shift-f" [:searcher.show]
           "cmd-shift-t" [:tabset.new]
           "ctrl-shift-right" [:tabs.move-next-tabset]
           "ctrl-shift-left" [:tabs.move-prev-tabset]
           }
     :editor {"alt-w" [:editor.watch.watch-selection]
              "alt-up" [(:emacs.keymap-cmd "Ctrl-Alt-U")]
              "alt-m" [:editor.line-start-smart]
              "alt-enter" [(:paredit.select.parent "(")
                           :eval-editor-form
                           :paredit.select.clear]
              "alt-shift-w" [:editor.watch.unwatch]
              "cmd-shift-/" [:toggle-comment-selection]}
     :editor.cljs {"alt-m" [(:editor.watch.custom-watch-selection "(let [start (.getTime (js/Date.))
                                                                         res (do __SELECTION__)]
                                                                     __|(str (- (.getTime (js/Date.)) start) \" ms\")|__
                                                                     res) " {:class "timed" :verbatim true})]}
     :editor.clj {"alt-up" [(:eval.custom "(do __SELECTION__)" {:result-type :replace})]
                  "alt-m" [(:eval.custom " (with-out-str (clojure.pprint/write (macroexpand-1 '__SELECTION__) :suppress-namespaces false :dispatch clojure.pprint/code-dispatch))" {:result-type :replace})]
                  "alt-e" [(:editor.watch.custom-watch-selection "(let [start (System/currentTimeMillis)
                                                                         res (do __SELECTION__)]
                                                                     __|(str (- (System/currentTimeMillis) start) \" ms\")|__
                                                                     res) " {:class "timed" :verbatim true})]}
     :editor.keys.normal {"cmd-d" [:editor.doc.toggle]}
     :editor.keys.vim.normal {"cmd-d" [:editor.doc.toggle]
                              "e" [:toggle-console]

                              "shift-alt-s" [(:paredit.select.parent "(")]
                              "alt-s" [(:paredit.select.parent "(")
                                       :smart-indent-selection
                                       :paredit.select.clear]
                              ">" [:paredit.grow.right]
                              "<" [:paredit.shrink.right]
                              "alt-shift-," [:paredit.shrink.left]
                              "alt-shift-." [:paredit.grow.left]}
     }
 }
